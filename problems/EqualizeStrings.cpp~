#include <algorithm>
#include <iostream>
#include <iterator>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>

using namespace std;

template <class T> string toStr(const T &x){
stringstream s; s << x; return s.str();
}

template <class T> int toInt(const T &x){
stringstream s; s << x; int r; s >> r; return r;
}

#define For(i, a, b) for (int i=(a); i<(b); ++i)
#define foreach(x, v) for (typeof (v).begin() x = (v).begin(); x != (v).end(); ++x)
#define D(x) cout << #x " = " << (x) << endl


class EqualizeStrings {
	public:
	string getEq(string s, string t) {
	  string ans = "";
	  for (int i = 0; i < s.size(); ++i){
	    int x = s[i] - 'a', y = t[i] - 'a';
	    if (x > y) swap(x, y);
	    char add;
	    if (y - x < 26 - (y - x)){
	      add = x;
	    }else{
	      add = 0;
	    }
	    add += 'a';
	    ans += add;
	  }
	  return ans;
	}

 
                     
};

//BEGIN CUT HERE
int main(){
EqualizeStrings ___test;
___test.run_test(-1);
return 0;
}
//END CUT HERE


// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor
